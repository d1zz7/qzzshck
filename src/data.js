
const params = {
  backgroundColor: '#34464406',
};

const quizzes = [
  {
    question: 'Компилятор – это ',
    answer:   'один из видов трансляторов',
  },
  {
    question: 'Транслятор – это ',
    answer:   'техническое устройство, которое выполняет перевод программы с одного языка программирования на другой',
  },
  {
    question: 'Транслятор – это ',
    answer:   'программа, выполняющая перевод программы с одного языка программирования на другой',
  },
  {
    question: 'Транслятор – это ',
    answer:   'одно из основных средств автоматизации программирования для преобразования программы, написанный на машинно-независимом языке, в программу на машинном языке конкретной ЭВМ',
  },
  {
    question: 'Интерпретатор –',
    answer:   'программа, анализирующая команды или операторы исходной программы и немедленно выполняющий их',
  },
  {
    question: 'Интерпретатор –',
    answer:   'переводит в машинные коды 1 строчку программы и сразу ее выполняет',
  },
  {
    question: 'Компоновщик – это ',
    answer:   'программа, которая из одного или нескольких объектных модулей с привлечением библиотечных программ и стандартных подпрограмм формирует загрузочный модуль',
  },
  {
    question: 'Отладчик –',
    answer:   'программа, помогающая анализировать поведение отлаживаемой программы',
  },
  {
    question: 'Отладчик –',
    answer:   'программа, позволяющая выполнять остановы в заданных точках, просмотреть текущие значения переменных и изменять их значения',
  },
  {
    question: 'Функции анализатора. Выберите лишнее.',
    answer:   'перевод документа одного вида к документу другого вида ',
  },
  {
    question: '... позволяют автоматически приводить документы к другой форме представления или переводить документ одного вида к документу другого вида, синтезировать какой-либо документ из отдельных частей и т.п.',
    answer:   'преобразователи',
  },
  {
    question: 'Инструментальные средства разработки программ – это',
    answer:   'средства создания новых программ',
  },
  {
    question: 'Инструментальные средства разработки программ – это',
    answer:   'программное обеспечение, предназначенное для разработки и отладки новых программ',
  },
  {
    question: 'Инструментальные средства разработки программ – это',
    answer:   'аппаратные и программные инструменты разработки нового ПО',
  },
  {
    question: 'Класс инструментальной среды разработки и сопровождения ПС, предназначенный в основном для поддержки процессов программирования (кодирования), тестирования и отладки ПС.',
    answer:   'среда программирования',
  },
  {
    question: 'Класс инструментальной среды разработки и сопровождения ПС, ориентированный на поддержку ранних этапов разработки ПС (спецификаций) и автоматической генерации программ по спецификациям.',
    answer:   'рабочие места компьютерной технологии',
  },
  {
    question: 'Класс инструментальной среды разработки и сопровождения ПС, предназначенный для поддержки всех процессов разработки и сопровождения в течение всего жизненного цикла ПС и ориентирована на коллективную разработку больших программных систем с длительным жизненным циклом.',
    answer:   'инструментальные системы технологии программирования',
  },
  {
    question: 'Программное обеспечение делится на классы:',
    answer:   'Системное ПО, прикладное ПО и инструментальные средства разработки программ ',
  },
  {
    question: 'Технология проектирования определяется как совокупность трех составляющих:',
    answer:   'Пошаговые процедуры, критерии и правила для оценки, нотации',
  },
  {
    question: 'Технология проектирования, разработки и сопровождения ИС должна удовлетворять общим требованиям. Убрать лишнее.',
    answer:   'технология должна обеспечивать возможность ведения работ по проектированию отдельных подсистем небольшими группами',
  },
  {
    question: 'Стандарт проектирования не устанавливает',
    answer:   'комплектность, состав и структуру документации на каждой стадии проектирования',
  },
  {
    question: 'Стандарт оформления проектной документации устанавливает',
    answer:   'комплектность, состав и структуру документации на каждой стадии проектирования',
  },
  {
    question: 'Стандарт интерфейса пользователя устанавливает',
    answer:   'правила использования клавиатуры и мыши',
  },
  {
    question: 'Ядро знаний SWEBOK– это',
    answer:   'нормативный документ, разработанный IEEE',
  },
  {
    question: 'Каждая область ядра знаний SWEBOK представляется:',
    answer:   'определением понятийного аппарата, методов и средств инженерной деятельности',
  },
  {
    question: 'К основным областям знаний SWEBOK относятся',
    answer:   'инженерия требований, проектирование ПО',
  },
  {
    question: 'К организационным областям знаний SWEBOK относятся',
    answer:   'управление конфигурацией, управление проектами',
  },
  {
    question: 'IEEE– это',
    answer:   'Всемирная некоммерческая техническая профессиональная ассоциация ученых и исследователей',
  },
  {
    question: 'Концепции, лежащие в основе модульного программирования',
    answer:   'функциональная декомпозиция, пространственная и временная группировка информации (модульность) ',
  },
  {
    question: 'Последовательность логически взаимосвязанных фрагментов задачи, оформленных как отдельная часть программы ',
    answer:   'модуль',
  },
  {
    question: 'Структурный подход к программированию – это',
    answer:   'подход, требующий представления задачи в виде иерархии подзадач простейшей структуры',
  },
  {
    question: 'Основными преимуществами CASE-средств являются:',
    answer:   'увеличение времени на разработку',
  },
  {
    question: 'Основными преимуществами CASE-средств являются:',
    answer:   'облегчение при модификации',
  },
  {
    question: 'CASE-средства классифицируются по следующим признакам:',
    answer:   'по применяемым методологиям и моделям систем и БД',
  },
  {
    question: 'CASE-средства классифицируются по следующим признакам:',
    answer:   'по степени интегрированности с СУБД',
  },
  {
    question: 'Характерные особенности CASE-средств',
    answer:   'мощные графические средства для описания и документирования ИС, обеспечивающие удобный интерфейс с разработчиком и развивающие его творческие возможности',
  },
  {
    question: 'Характерные особенности CASE-средств',
    answer:   'интеграция отдельных компонент CASE-средств, обеспечивающая управляемость процессом разработки ИС',
  },
  {
    question: 'Характерные особенности CASE-средств',
    answer:   'использование специальным образом организованного хранилища проектных метаданных',
  },
  {
    question: 'Общие функции CАSE-средств',
    answer:   'документирование, управление конфигурацией, управление проектом',
  },
  {
    question: 'Функциональные характеристики CАSE-средств',
    answer:   'проектная среда',
  },
  {
    question: 'Выберите действие, включенное в процесс внедрения CАSE-средств:',
    answer:   'выполнение и проверка CАSE-средств',
  },
  {
    question: 'Выберите действие, включенное в процесс внедрения CАSE-средств:',
    answer:   'выполнение и проверка CАSE-средств',
  },
  {
    question: 'Функция, ориентированная на фазу жизненного цикла CАSE-средств',
    answer:   'моделирование',
  },
  {
    question: 'Функция, ориентированная на фазу жизненного цикла CАSE-средств',
    answer:   'реализация',
  },
  {
    question: 'Что из нижеперечисленного входит в список фаз жизненного цикла программного обеспечения по методологии RAD?',
    answer:   'планирование, построение и внедрение (?)',
  },
  {
    question: 'Основные типы метаданных Data Warehouse не отражают ',
    answer:   'интервалы между тестами',
  },
  {
    question: 'Облегчают возможность визуального представления содержимого Data Warehouse, позволяют, "перемещаясь" по хранилищу, быстро отбирать необходимые данные для последующей обработки',
    answer:   'метаданные',
  },
  {
    question: 'Предоставляет возможность разработки информационных систем, ориентированных на организацию многомерных баз данных и создание корпоративных сетей, а также обеспечивает поддержку Web-технологий в сетях Internet/Intranet',
    answer:   'Система OLAP',
  },
  {
    question: 'На этапе анализа требовании ЖЦ ПО определяются: ',
    answer:   'требования к программным и информационным компонентам ПО, необходимые аппаратные ресурсы',
  },
  {
    question: 'Основные процессы жизненного цикла программного обеспечения',
    answer:   'разработка, эксплуатация',
  },
  {
    question: 'Основные процессы жизненного цикла программного обеспечения',
    answer:   'сопровождение',
  },
  {
    question: 'Преимущества спиральной модели ЖЦ ПО:',
    answer:   'ориентация на развитие и модификацию ПО в процессе его проектирования',
  },
  {
    question: 'Виды моделей жизненного цикла ПО',
    answer:   'каскадная модель',
  },
  {
    question: 'Модель ЖЦ ПО, в которой переход на следующую ступень осуществляется только после того, как будет полностью завершена работа на предыдущей стадии; возвратов на пройденные стадии не предусматривается',
    answer:   'имитационная модель',
  },
  {
    question: 'Преимущества каскадной модели ЖЦ ПО',
    answer:   'быстрота разработки программного обеспечения',
  },
  {
    question: 'Процесс создания модели требуемого продукта',
    answer:   'прототипирование',
  },
  {
    question: 'Технологию RAD целесообразно применять, когда четко определены некоторые приоритетные направления разработки проекта. Выберите лишнее',
    answer:   'Возможно разбиение проекта на функциональные компоненты.',
  },
  {
    question: 'Что из нижеперечисленного не является принципом RAD технологии?',
    answer:   'Инструментарий должен быть нацелен на минимизацию времени разработки.',
  },
  {
    question: 'Основные принципы «живой» разработки ПО зафиксированы в манифесте "живой" разработки, появившемся в 2000 году. Выберите лишнее.',
    answer:   'Без создания прототипа разработка ПО невозможна.',
  },
  {
    question: 'Техники экстремального программирования. Выберите лишнее.',
    answer:   'Метафора системы.',
  },
  {
    question: 'Техника экстремального программирования, предполагающая что команда размещается в одном, достаточно просторном помещении, для упрощения коммуникации и возможности проведения коллективных обсуждений при планировании и принятии важных технических решений.',
    answer:   'Включение заказчика в команду.',
  },
  {
    question: 'Техника экстремального программирования, предполагающая что в любой момент любой член команды может изменить любую часть кода. Никто не должен выделять свою собственную область ответственности, вся команда в целом отвечает за весь код.',
    answer:   'Включение заказчика в команду.',
  },
  {
    question: 'Техника экстремального программирования, предполагающая что система собирается и проходит интеграционное тестирование как можно чаще, по несколько раз в день, каждый раз, когда пара программистов оканчивает реализацию очередной функции.',
    answer:   'Включение заказчика в команду.',
  },
  {
    question: 'Техника экстремального программирования, предполагающая что Программисты постоянно перерабатывают систему для устранения излишней сложности, увеличения понятности кода, повышения его гибкости, но без изменений в его поведении, что проверяется прогоном после каждой переделки тестов.',
    answer:   'Включение заказчика в команду.',
  },
  {
    question: 'В рамках Rational Unified Process (RUP) набор действий по разработке программ включает этапы:',
    answer:   'определение требований',
  },
  {
    question: 'В рамках Rational Unified Process (RUP) набор действий по разработке программ включает этапы:',
    answer:   'проектирование, программирование',
  },
  {
    question: 'В рамках Rational Unified Process (RUP) набор действий по разработке программ включает этапы:',
    answer:   'тестирование, внедрение',
  },
  {
    question: 'К какой модели ЖЦ ПО относится Rational Unified Process (RUP)?',
    answer:   'имитационная модель',
  },
  {
    question: 'Этап ЖЦ ПО Rational Unified Process (RUP), включающий в себя операции, имеющие место при передаче продуктов заказчикам и обеспечении доступности продукта конечным пользователям',
    answer:   'Анализ и проектирование',
  },
  {
    question: 'Этап ЖЦ ПО Rational Unified Process (RUP), обеспечивающий реализацию принципов моделирования с целью изучения бизнеса организации и накопления знаний о нем, оптимизации бизнес-процессов и принятия решения об их частичной или полной автоматизации',
    answer:   'Анализ и проектирование',
  },
  {
    question: 'Этап ЖЦ ПО Rational Unified Process (RUP), охватывающий процедуры преобразования требований в промежуточные описания (модели), представляющие, как эти требования должны быть реализованы',
    answer:   'Анализ и проектирование',
  },
  {
    question: 'CASE-средства обладают рядом достоинств. Выберите лишнее.',
    answer:   'поддерживают развитие и сопровождение разработки ',
  },
  {
    question: 'Этап ЖЦ ПО, который отсутствует при применении CASE-средств.',
    answer:   'Анализ',
  },
  {
    question: 'На какой модели ЖЦ ПО базируется CASE-технология?',
    answer:   'спиральная модель',
  },
  {
    question: 'Интегрированное CASE-средство не содержит',
    answer:   'графические средства анализа и проектирования',
  },
  {
    question: 'CASE-средства, предназначенные для построения и анализа моделей предметной области',
    answer:   'Upper CASE',
  },
  {
    question: 'CASE-средства, поддерживающие наиболее распространенные методологии проектирования и использующиеся для создания проектных спецификаций',
    answer:   'Middle CASE',
  },
  {
    question: 'В бизнес-процессах выделяют классы процессов',
    answer:   'основные бизнес-процессы',
  },
  {
    question: 'В бизнес-процессах выделяют классы процессов',
    answer:   'обеспечивающие бизнес-процессы',
  },
  {
    question: 'В бизнес-процессах выделяют классы процессов',
    answer:   'бизнес-процессы управления',
  },
  {
    question: 'Классификация бизнес-процессов включает следующие классы процессов',
    answer:   'основные бизнес-процессы',
  },
  {
    question: 'Классификация бизнес-процессов включает следующие классы процессов',
    answer:   'обеспечивающие бизнес-процессы',
  },
  {
    question: 'Классификация бизнес-процессов включает следующие классы процессов',
    answer:   'бизнес-процессы управления',
  },
  {
    question: 'Вставьте пропущенные слова «Процессный подход позволяет рассматривать деятельность организации как связанную систему _____, каждый из которых протекает во взаимосвязи с другими бизнес-процессами или _____.»',
    answer:   'бизнес-процессов, внешней средой',
  },
  {
    question: 'То, ради чего осуществляется бизнес-процесс',
    answer:   'Входы бизнес-процесса',
  },
  {
    question: 'Должностное лицо, несущее ответственность за получение результата процесса и обладающее полномочиями для распоряжения ресурсами, необходимыми для выполнения процесса',
    answer:   'Владелец бизнес-процесса',
  },
  {
    question: 'Команда специалистов из различных функциональных областей (кросс-функциональная команда), выполняющих действия процесса',
    answer:   'Исполнители бизнес-процесса',
  },
  {
    question: 'Ресурсы (материальные, информационные), необходимые для выполнения и получения результата процесса, которые потребляются или преобразовываются при выполнении процесса',
    answer:   'Входы бизнес-процесса',
  },
  {
    question: 'Бизнес-процессы, которые управляют функционированием системы',
    answer:   'Управляющие',
  },
  {
    question: 'Бизнес-процессы, которые составляют основной бизнес компании и создают основной поток доходов',
    answer:   'Операционные',
  },
  {
    question: 'Бизнес-процессы, которые обслуживают основной бизнес',
    answer:   'Операционные',
  },
  {
    question: 'Функциональная модель уже существующего процесса/функции, позволяющая выявить существующие недостатки',
    answer:   'AS-IS',
  },
  {
    question: 'Функциональная модель новой организации бизнес-процессов, которая нужна для оценки последствий внедрения информационной системы и анализа альтернативных путей выполнения работы и документирования того, как система будет функционировать в будущем.',
    answer:   'TO-BE',
  },
  {
    question: 'Функциональная модель новой организации бизнес-процессов, которая отражает «идеализированное» положение дел (согласно регламентирующим документам), тогда как фактическая схема работ в реальности может быть несколько иной.',
    answer:   'SHOULD-BE',
  },
  {
    question: 'Фундаментальное переосмысление и радикальное перепроектирование бизнес-процессов для достижения максимального эффекта производственно-хозяйственной и финансово-экономической деятельности, оформленное соответствующими организационно-распорядительными и нормативными документами.',
    answer:   'Реинжиниринг',
  },
  {
    question: 'Основополагающая цель реинжиниринга бизнес-процессов.',
    answer:   'Гибкое и оперативное приспособление к ожидаемым изменениям запросов потребителей',
  },
  {
    question: 'Результат реинжиниринга бизнес-процессов.',
    answer:   'Гибкое и оперативное приспособление к ожидаемым изменениям запросов потребителей',
  },
  {
    question: 'Тип реинжиниринга бизнес-процессов, при котором оптимизируется внутренняя интеграция различных бизнес-процессов, но не вносятся существенные изменения в функционирование организации.',
    answer:   'эволюционный',
  },
  {
    question: 'Тип реинжиниринга бизнес-процессов, при котором перепроектируются все бизнес-процессы и происходит переориентация организации на новый вид бизнеса.',
    answer:   'эволюционный',
  },
  {
    question: 'В общем виде реинжиниринг решает следующие задачи. Выберите лишнее',
    answer:   'мотивирует творческий подход, анализирует ситуации и коллективную работу',
  },
  {
    question: 'Что из нижеперечисленного не относится к основным принципам реинжиниринга бизнес-процессов?',
    answer:   'выполнение работы там, где ее можно сделать наиболее эффективно',
  },
  {
    question: 'Этап реинжиниринга бизнес-процессов, на котором определяются цели и задачи проекта, формируется команда по реинжинирингу и определяется подход к реинжинирингу',
    answer:   'анализ проблем и перепроектирование бизнес-процессов и технологий',
  },
  {
    question: 'Этап реинжиниринга бизнес-процессов, на котором выполняется построение графических моделей бизнес-процессов на основе предложенной методики их документирования, хронометрируются составные операции бизнес-процессов',
    answer:   'анализ проблем и перепроектирование бизнес-процессов и технологий',
  },
  {
    question: 'Этап реинжиниринга бизнес-процессов, на котором проводится анализ бизнес-процессов с целью сравнения их с бизнес-процессами передовых подразделений организации или организации-конкурента',
    answer:   'анализ проблем и перепроектирование бизнес-процессов и технологий',
  },
  {
    question: 'Этап реинжиниринга бизнес-процессов, на котором формулируют систему взглядов на новую организацию согласно ее целям и возможностям',
    answer:   'анализ проблем и перепроектирование бизнес-процессов и технологий',
  },
  {
    question: 'Этап реинжиниринга бизнес-процессов, на котором выявляются проблемные места технологических и бизнес-процессов',
    answer:   'анализ проблем и перепроектирование бизнес-процессов и технологий',
  },
  {
    question: 'Способ применения реинжиниринга бизнес-процессов, при котором текущий процесс понят, документирован и проанализирован для систематического создания новых и лучших процессов',
    answer:   'Реинжиниринг «с нуля»',
  },
  {
    question: 'Способ применения реинжиниринга бизнес-процессов, при котором существующий процесс полностью разрушается и утилизируется. Новый процесс создается с нуля путем фундаментального переосмысления существующего',
    answer:   'Реинжиниринг «с нуля»',
  },
  {
    question: 'Вид моделирования бизнес-процессов, который подразумевает описание процессов в виде взаимосвязанных, четко структурированных функций.',
    answer:   'имитационное',
  },
  {
    question: 'Вид моделирования бизнес-процессов, который подразумевает описание процессов, как набора взаимодействующих объектов.',
    answer:   'имитационное',
  },
  {
    question: 'Вид моделирования бизнес-процессов, который подразумевает моделирование поведения процессов в различных внешних и внутренних условиях с анализом динамических характеристик процессов и с анализом распределения ресурсов.',
    answer:   'имитационное',
  },
  {
    question: 'Принципы моделирования бизнес-процессов «Каждый процесс может быть представлен набором иерархически выстроенных элементов».',
    answer:   'Принцип декомпозиции',
  },
  {
    question: 'Принципы моделирования бизнес-процессов «Для разработки модели необходимо абстрагироваться от множества параметров процесса и сфокусироваться на ключевых аспектах».',
    answer:   'Принцип декомпозиции',
  },
  {
    question: 'Принципы моделирования бизнес-процессов «Элементы, входящие в процесс, должны быть формализованы и зафиксированы в модели».',
    answer:   'Принцип декомпозиции',
  },
  {
    question: 'Принципы моделирования бизнес-процессов «Все элементы, входящие в модель процесса, должны иметь однозначное толкование и не противоречить друг другу».',
    answer:   'Принцип декомпозиции',
  },
  {
    question: 'Принципы моделирования бизнес-процессов «Прежде чем включать в модель тот или иной элемент, необходимо оценить его влияние на процесс».',
    answer:   'Принцип декомпозиции',
  },
  {
    question: 'Принципы структурного анализа «Решение сложных проблем путем их разбиения на множество меньших независимых задач, легких для понимания и решения».',
    answer:   'Иерархическое упорядочивание',
  },
  {
    question: 'Принципы структурного анализа «Организация составных частей проблемы в иерархические древовидные структуры с добавлением новых деталей на каждом уровне».',
    answer:   'Иерархическое упорядочивание',
  },
  {
    question: 'Принципы структурного анализа «Определение существенных аспектов системы и отказ от несущественных аспектов».',
    answer:   'Иерархическое упорядочивание',
  },
  {
    question: 'Принципы структурного анализа «Строгий методический подход к решению проблемы».',
    answer:   'Иерархическое упорядочивание',
  },
  {
    question: 'Принципы структурного анализа «Обоснованность и согласованность элементов».',
    answer:   'Иерархическое упорядочивание',
  },
  {
    question: 'Принципы структурного анализа «Данные должны быть структурированы и иерархически организованы».',
    answer:   'Иерархическое упорядочивание',
  },
  {
    question: 'Диаграмма IDEF0 может содержать следующие типы диаграмм',
    answer:   'контекстную диаграмму, диаграмму декомпозиции',
  },
  {
    question: 'Диаграмма IDEF0 может содержать следующие типы диаграмм',
    answer:   'диаграмму дерева узлов',
  },
  {
    question: 'Диаграмма IDEF0 может содержать следующие типы диаграмм',
    answer:   'диаграмму только для экспозиции (FEO)',
  },
  {
    question: 'Типы стрелок, не входящие в состав диаграммы IDEF0',
    answer:   'Editor',
  },
  {
    question: 'Правило IDEF0 «Управление детализацией»',
    answer:   'метки для ограничений потоков данных на разветвлениях',
  },
  {
    question: 'В основе методологии IDEF0 лежат 4 основных понятия. Выберите лишнее.',
    answer:   'глоссарий',
  },
  {
    question: 'Методология IDEF0 ___ - представляет собой некоторую конкретную функцию в рамках рассматриваемой системы.',
    answer:   'глоссарий',
  },
  {
    question: 'Методология IDEF0 ___ отображает элемент системы, который обрабатывается функциональным блоком или оказывает иное влияние на функцию, представленную данным функциональным блоком.',
    answer:   'глоссарий',
  },
  {
    question: 'Методология IDEF0 ___ применяется при разбиении сложного процесса на составляющие его функции.',
    answer:   'глоссарий',
  },
  {
    question: 'Методология IDEF0. Тип связности, когда блоки группируются вследствие того, что они используют одни и те же входные данные и/или производят одни и те же выходные данные.',
    answer:   'Тип временной связности',
  },
  {
    question: 'Методология IDEF0. Тип связности, когда конкретная связь между функциями мала или полностью отсутствует.',
    answer:   'Тип временной связности',
  },
  {
    question: 'Методология IDEF0. Тип связности, когда данные используются одновременно или функции включаются параллельно, а не последовательно.',
    answer:   'Тип временной связности',
  },
  {
    question: 'Модель в нотации IDEF3 содержит следующие диаграммы',
    answer:   'диаграмму описания последовательности этапов процесса',
  },
  {
    question: 'Модель в нотации IDEF3 содержит следующие диаграммы',
    answer:   'диаграмму состояния объекта и его изменений в процессе',
  },
  {
    question: 'Модель в нотации IDEF3 содержит следующие диаграммы',
    answer:   'диаграмму сценариев выполнения процесс',
  },
  {
    question: 'Тип перекрестка в модели в нотации IDEF3, обозначающийся знаком  ',
    answer:   'все предшествующие процессы должны быть завершены, прежде чем начнется выполнение следующей работы',
  },
  {
    question: 'Тип перекрестка в модели в нотации IDEF3, обозначающийся знаком  ',
    answer:   'Асинхронное соединение "И"',
  },
  {
    question: 'Тип перекрестка в модели в нотации IDEF3, обозначающийся знаком  ',
    answer:   'все предшествующие работы должны быть завершены одновременно',
  },
  {
    question: 'Тип перекрестка в модели в нотации IDEF3, обозначающийся знаком  ',
    answer:   'Асинхронное соединение "И"',
  },
  {
    question: 'Тип перекрестка в модели в нотации IDEF3, обозначающийся знаком  ',
    answer:   'все следующие процессы завершены',
  },
  {
    question: 'Тип перекрестка в модели в нотации IDEF3, обозначающийся знаком  ',
    answer:   'Асинхронное соединение "И"',
  },
  {
    question: 'Тип перекрестка в модели в нотации IDEF3, обозначающийся знаком  ',
    answer:   'все следующие процессы запускаются одновременно',
  },
  {
    question: 'Тип перекрестка в модели в нотации IDEF3, обозначающийся знаком  ',
    answer:   'Асинхронное соединение "И"',
  },
  {
    question: 'Тип перекрестка в модели в нотации IDEF3, обозначающийся знаком  ',
    answer:   'все следующие процессы запускаются одновременно',
  },
  {
    question: 'Тип перекрестка в модели в нотации IDEF3, обозначающийся знаком  ',
    answer:   'Асинхронное соединение "ИЛИ"',
  },
  {
    question: 'При оформлении графического изображения технологического процесса на схеме отображаются:',
    answer:   'нумерация всех графических символов технологического процесса',
  },
  {
    question: 'Связь в IDEF3, показывающая, что работа-источник должна полностью закончиться прежде, чем работа-цель начнется',
    answer:   'Временное предшест¬вование',
  },
  {
    question: 'Связь в IDEF3, обозначающаяся сплошной стрелкой ( )',
    answer:   'Временное предшест¬вование',
  },
  {
    question: 'Связь в IDEF3, которая применяется для описания того, что результатом выполнения исходного действия является некоторый объект, который необходим для выполнения конечного действия.',
    answer:   'Временное предшест¬вование',
  },
  {
    question: 'Связь в IDEF3, обозначающаяся стрелкой с двумя наконечниками ( )',
    answer:   'Временное предшест¬вование',
  },
  {
    question: 'Связь в IDEF3, которая используется, когда невозможно описать связи с использованием предшественных или объектных связей.',
    answer:   'Временное предшест¬вование',
  },
  {
    question: 'Связь в IDEF3, обозначающаяся пунктирной стрелкой ( )',
    answer:   'Временное предшест¬вование',
  },
  {
    question: 'В IDEF3 изображаются прямоугольниками с прямыми углами',
    answer:   'Unit of Behavior',
  },
  {
    question: 'В IDEF3 показывают существенные взаимоотношения между действиями',
    answer:   'Unit of Behavior',
  },
  {
    question: 'В IDEF3 используются для отображения логики взаимодействия стрелок при слиянии и разветвлении',
    answer:   'Unit of Behavior',
  },
  {
    question: 'В IDEF3 выражает некую идею, концепцию или данные, которые нельзя описать стрелкой, перекрестком или действием',
    answer:   'Unit of Behavior',
  },
  {
    question: 'В IDEF3 тип объекта ссылок, который описывает участие важного объекта в действии',
    answer:   'единица действия',
  },
  {
    question: 'В IDEF3 тип объекта ссылок, который является инструментом циклического перехода.',
    answer:   'единица действия',
  },
  {
    question: 'В IDEF3 тип объекта ссылок, который применяется для многократного отображения на диаграмме одного и того же действия',
    answer:   'единица действия',
  },
  {
    question: 'В IDEF3 тип объекта ссылок, который используется для документирования важной информации общего характера, относящейся к изображенному на диаграмме',
    answer:   'единица действия',
  },
  {
    question: 'В IDEF3 тип объекта ссылок, который используется для уточнения или более детального описания изображенного на диаграмме',
    answer:   'единица действия',
  },
  {
    question: 'DFD описывает',
    answer:   'внешние по отношению к системе источники и адресаты данных',
  },
  {
    question: 'Элемент графической нотации DFD, который определяет информацию (материальный объект), передаваемую через некоторое соединение от источника к приемнику',
    answer:   'Внешняя сущность',
  },
  {
    question: 'Элемент графической нотации DFD, который представляет собой преобразование входных потоков данных в выходные в соответствии с определенным алгоритмом',
    answer:   'Внешняя сущность',
  },
  {
    question: 'Элемент графической нотации DFD, который представляет собой абстрактное устройство для хранения информации',
    answer:   'Внешняя сущность',
  },
  {
    question: 'Элемент графической нотации DFD, который представляет собой материальный объект или физическое лицо, выступающие как источник или приемник информации',
    answer:   'Внешняя сущность',
  },
  {
    question: 'К логическому уровню в методологии IDEF1X относится ',
    answer:   'диаграмма сущность-связь',
  },
  {
    question: 'Методология функционального моделирования для описания функций предприятия, предлагающая язык функционального моделирования для анализа, разработки, реинжиниринга и интеграции информационных систем бизнес-процессов или анализа инженерии разработки ПО ',
    answer:   'DFD',
  },
  {
    question: 'Методология моделирования и стандарт документирования процессов, происходящих в системе',
    answer:   'DFD',
  },
  {
    question: '',
    answer:   'DFD',
  },
  {
    question: 'Методология семантического моделирования данных, т.е. трактовка данных в контексте их взаимосвязей с другими данными',
    answer:   'DFD',
  },
  {
    question: 'Формализуют результаты изучения программистами того контекста, где будет работать их будущее ПО',
    answer:   'Модели анализа',
  },
  {
    question: 'В данных моделях фиксируются архитектурные решения будущего ПО - его структура, внешние и внутренние интерфейсы, а также принципиальные вопросы реализации с учетом средств разработки, платформ исполнения и т.д ',
    answer:   'Модели анализа',
  },
  {
    question: 'Функции, выполняемые нотацией в визуальном моделировании',
    answer:   'обеспечивает достаточными классами',
  },
  {
    question: 'Функции, выполняемые нотацией в визуальном моделировании',
    answer:   'обеспечивает достаточную семантику',
  },
  {
    question: 'Функции, выполняемые нотацией в визуальном моделировании',
    answer:   'предлагает конкретную форму',
  },
  {
    question: 'Язык UML– это',
    answer:   'унифицированный язык моделирования',
  },
  {
    question: 'Язык UML– это',
    answer:   'Unified Modeling Language',
  },
  {
    question: 'Язык UML– это',
    answer:   'язык для визуализации, специфицирования, конструирования и документирования артефактов программных систем',
  },
  {
    question: 'Моделирование в UML позволяет решать задачи:',
    answer:   'визуализировать систему в ее текущем или желательном для нас состоянии',
  },
  {
    question: 'Моделирование в UML позволяет решать задачи:',
    answer:   'описать структуру или поведение системы; получить шаблон, позволяющий сконструировать систему',
  },
  {
    question: 'Моделирование в UML позволяет решать задачи:',
    answer:   'документировать принимаемые решения, используя полученные модели',
  },
  {
    question: 'Словарь UML включает строительные блоки:',
    answer:   'диаграммы',
  },
  {
    question: 'Словарь UML включает строительные блоки:',
    answer:   'сущности',
  },
  {
    question: 'В UML существуют следующие виды сущностей',
    answer:   'декомпозиционные',
  },
  {
    question: 'В UML существуют следующие виды сущностей',
    answer:   'декомпозиционные',
  },
  {
    question: 'В UML существуют следующие виды сущностей',
    answer:   'абстрактные',
  },
  {
    question: 'В UML существуют следующие виды связей:',
    answer:   'зависимость',
  },
  {
    question: 'В UML существуют следующие виды связей:',
    answer:   'ассоциация',
  },
  {
    question: 'В UML существуют следующие виды связей:',
    answer:   'линейные',
  },
  {
    question: 'В процессе разработки и внедрения программных систем UML позволяет специфицировать все важные решения касающиеся:',
    answer:   'анализа',
  },
  {
    question: 'В процессе разработки и внедрения программных систем UML позволяет специфицировать все важные решения касающиеся:',
    answer:   'выбора группы сопровождения',
  },
  {
    question: 'Механизмы расширения UML включают:',
    answer:   'стереотипы',
  },
  {
    question: 'Механизмы расширения UML включают:',
    answer:   'помеченные значения',
  },
  {
    question: 'Механизмы расширения UML включают:',
    answer:   'ограничения',
  },
  {
    question: 'Язык UML предназначен для:',
    answer:   'визуализации',
  },
  {
    question: 'Язык UML предназначен для:',
    answer:   'специфицирования',
  },
  {
    question: 'Основные стереотипы класса в нотации UML',
    answer:   'Boundary (граница), Entity(сущность), Action (действие)',
  },
  {
    question: 'Стереотипы сообщений диаграммы последовательности в нотации UML. Выберите лишнее.',
    answer:   '«Delete» (удалить)',
  },
  {
    question: 'Диаграмма состояний отображает',
    answer:   'автомат состояний',
  },
  {
    question: 'Диаграмма моделирования данных "сущность-связь" (ERD) состоит из:',
    answer:   'сущности, атрибуты, связи',
  },
  {
    question: 'Типы диаграмм, используемые в UML',
    answer:   'диаграмма прецедентов, диаграмма последовательности, диаграмма кооперации',
  },
  {
    question: 'Типы диаграмм, используемые в UML',
    answer:   'диаграмма классов, диаграмма объектов, диаграмма взаимодействий',
  },
  {
    question: 'Типы диаграмм, используемые в UML',
    answer:   'диаграмма состояний, диаграмма компонентов, диаграмма развертывания',
  },
  {
    question: 'Классы описывают собой описание совокупности объектов с общими: ',
    answer:   'атрибутами и операциями',
  },
  {
    question: 'Атрибут – это ',
    answer:   'именованное свойство класса',
  },
  {
    question: 'Атрибут – это ',
    answer:   'свойство моделируемой сущности',
  },
  {
    question: 'В объектно-ориентированном моделировании между классами существуют типы связей:',
    answer:   'зависимость',
  },
  {
    question: 'В объектно-ориентированном моделировании между классами существуют типы связей:',
    answer:   'обобщение',
  },
  {
    question: 'В объектно-ориентированном моделировании между классами существуют типы связей:',
    answer:   'ассоциация',
  },
  {
    question: 'В состав графического представления класса в языке UML входят части:',
    answer:   'имя',
  },
  {
    question: 'В состав графического представления класса в языке UML входят части:',
    answer:   'атрибуты',
  },
  {
    question: 'В состав графического представления класса в языке UML входят части:',
    answer:   'операции',
  },
  {
    question: 'Основные символы диаграммы потоков данных',
    answer:   'процесс (состоит в продуцировании выходных потоков из входных в соответствии с действием)',
  },
  {
    question: 'Основные символы диаграммы потоков данных',
    answer:   'хранилище (накопитель) данных',
  },
  {
    question: 'Основные символы диаграммы потоков данных',
    answer:   'внешняя сущность (или терминатор)',
  },
  {
    question: 'Языки обозначений, не входящие в язык UML',
    answer:   'блокирования',
  },
  {
    question: 'Тип основных элементов, использующихся для построения концептуальной модели UML',
    answer:   'базовые строительные блоки',
  },
  {
    question: 'Тип основных элементов, использующихся для построения концептуальной модели UML',
    answer:   'правила, определяющие как блоки могут сочетаться между собой',
  },
  {
    question: 'Тип основных элементов, использующихся для построения концептуальной модели UML',
    answer:   'общие механизмы языка',
  },
  {
    question: 'Разновидности структурных сущностей',
    answer:   'класс',
  },
  {
    question: 'Разновидности структурных сущностей',
    answer:   'интерфейс',
  },
  {
    question: 'Разновидности структурных сущностей',
    answer:   'кооперация',
  },
  {
    question: 'Диаграмма классов показывает',
    answer:   'классы',
  },
  {
    question: 'Диаграмма классов показывает',
    answer:   'объекты и кооперации',
  },
  {
    question: 'Диаграмма классов показывает',
    answer:   'интерфейсы',
  },
  {
    question: 'Хорошо сформулированные модели в языке UML ',
    answer:   'управляется прецедентами использования',
  },
  {
    question: 'Хорошо сформулированные модели в языке UML ',
    answer:   'основана на архитектуре',
  },
  {
    question: 'Хорошо сформулированные модели в языке UML ',
    answer:   'является итеративным и инкрементным',
  },
  {
    question: 'Моделирование словаря системы включает этапы',
    answer:   'определение разработчиков и пользователей для описания задачи и его решения ',
  },
  {
    question: 'Моделирование словаря системы включает этапы',
    answer:   'выявление для каждой абстракции соответствующее ей множество обязанностей',
  },
  {
    question: 'Моделирование словаря системы включает этапы',
    answer:   'разработать атрибуты и операции, необходимые для выполнения классами своих обязанностей',
  },
  {
    question: 'Особо важные отношения для объектно-ориентированного моделирования ',
    answer:   'зависимость',
  },
  {
    question: 'Особо важные отношения для объектно-ориентированного моделирования ',
    answer:   'обобщение',
  },
  {
    question: 'Особо важные отношения для объектно-ориентированного моделирования ',
    answer:   'ассоциация',
  },
  {
    question: 'Кратность ассоциации, записанная неправильно',
    answer:   'равна нулю (0..)',
  },
  {
    question: 'Кратность ассоциации, записанная неправильно',
    answer:   'ноль или число (0, 8)',
  },
  {
    question: 'Кратность ассоциации, записанная неправильно',
    answer:   'мало (0…)',
  },
  {
    question: 'Агрегирование – это',
    answer:   'ассоциация между двумя классами',
  },
  {
    question: 'Агрегирование – это',
    answer:   'связь между равноправными сущностями',
  },
  {
    question: 'Агрегирование – это',
    answer:   'связь типа часть/целое',
  },
  {
    question: 'Типы отношений, использованные на рисунке:  ',
    answer:   'ассоциация',
  },
  {
    question: 'Типы отношений, использованные на рисунке:  ',
    answer:   'зависимость',
  },
  {
    question: 'Типы отношений, использованные на рисунке:  ',
    answer:   'агрегация',
  },
  {
    question: 'Инструмент разработки программ выбирается на основе',
    answer:   'Меры автоматизма в работе реализации и инструментах разработки',
  },
  {
    question: 'Инструмент разработки программ выбирается на основе',
    answer:   'Объема реализации и времени исполнения (реакции), надежности, устойчивости, безопасности',
  },
  {
    question: 'Аппаратные инструментальные средства разработки ПО – это',
    answer:   'микропроцессор и подключаемые (внешние) устройства',
  },
  {
    question: 'Аппаратные инструментальные средства разработки ПО – это',
    answer:   'устройства вычислительной системы, специально предназначенные для поддержки разработки ПО',
  },
  {
    question: 'Аппаратные инструментальные средства разработки ПО – это',
    answer:   'периферийные устройства, микропроцессор вычислительного комплекса, предназначенные для разработки нового ПО',
  },
  {
    question: 'Программные инструментальные средства разработки ПО – это',
    answer:   'программы, позволяющие выполнить все работы, определенные методологией проектирования ПО',
  },
  {
    question: 'Программные инструментальные средства разработки ПО – это',
    answer:   'программы, которые используются в ходе разработки, корректировки или развития других прикладных или системных программ',
  },
  {
    question: 'К этапам развития технологии разработки программного обеспечения относятся',
    answer:   '"стихийное" программирование',
  },
  {
    question: 'К этапам развития технологии разработки программного обеспечения относятся',
    answer:   'структурный подход к программированию',
  },
  {
    question: 'К этапам развития технологии разработки программного обеспечения относятся',
    answer:   'компонентный подход и CASE-технологии',
  },
  {
    question: '"Стихийное" программирование – ',
    answer:   'первый этап в истории развития технологии разработки программного обеспечения, когда программирование фактически было искусством',
  },
  {
    question: '"Стихийное" программирование – ',
    answer:   'период в истории разработки программного обеспечения, когда программа создавалась одним программистом, способным отслеживать последовательность выполняемых операций и местонахождения данных в программе',
  },
  {
    question: 'Объектный подход к программированию – это',
    answer:   'технология создания сложного программного обеспечения, основанная на представлении программы в виде совокупности объектов, каждый из которых является экземпляром определенного типа (класса), а классы образуют иерархию с наследованием свойств',
  },
  {
    question: 'Объектный подход к программированию – это',
    answer:   'технология создания сложного программного обеспечения, позволяющая вести практически независимую разработку отдельных частей (объектов) программы',
  },
  {
    question: 'Компонентный подход',
    answer:   'предполагает построение программного обеспечения из отдельных компонентов физически отдельно существующих частей программного обеспечения',
  },
  {
    question: 'Компонентный подход',
    answer:   'предполагает взаимодействие между компонентами через стандартизованные двоичные интерфейсы и позволяет использовать исполняемые файлы в любом языке программирования, поддерживающем соответствующую технологию',
  },
  {
    question: 'Преимущества объектно-ориентированного подхода',
    answer:   'возможность многократного использования',
  },
  {
    question: 'Преимущества объектно-ориентированного подхода',
    answer:   'восприимчивость к изменениям',
  },
  {
    question: 'Преимущества объектно-ориентированного подхода',
    answer:   'реалистичное моделирование',
  },
  {
    question: 'Управление требованиями –',
    answer:   'процесс систематического выявления, организации и документирования требований к сложной системе',
  },
  {
    question: 'Управление требованиями –',
    answer:   'задача, состоящая в том, чтобы понимать проблемы заказчиков в их предметной области и на их языке и создавать системы, удовлетворяющие их потребности',
  },
  {
    question: 'Управление требованиями –',
    answer:   'процесс, в ходе которого вырабатывается и обеспечивается соглашение между заказчиком и выполняющей проект группой по поводу меняющихся требований к системе',
  },
  {
    question: 'К методам выявления требований относятся:',
    answer:   'интервьюирование и анкетирование, мозговой штурм и отбор идей',
  },
  {
    question: 'К методам выявления требований относятся:',
    answer:   'совещания, посвященные требованиям, создание прототипов',
  },
  {
    question: 'К методам выявления требований относятся:',
    answer:   'раскадровки, прецеденты, обыгрывание ролей',
  },
  {
    question: 'Требования к разрабатываемой системе должны включать:',
    answer:   'совокупность условий, при которых предполагается эксплуатировать будущую систему (аппаратные и программные ресурсы, предоставляемые системе; внешние условия ее функционирования; состав людей и работ, имеющих к ней отношение)',
  },
  {
    question: 'Требования к разрабатываемой системе должны включать:',
    answer:   'описание выполняемых системой функций',
  },
  {
    question: 'Требования к разрабатываемой системе должны включать:',
    answer:   'ограничения в процессе разработки (директивные сроки завершения отдельных этапов, имеющиеся ресурсы, организационные процедуры и мероприятия, обеспечивающие защиту информации)',
  },
  {
    question: 'Требования – это:',
    answer:   'некоторое свойство программного обеспечения, необходимое пользователю для решения проблемы при достижении поставленной цели',
  },
  {
    question: 'Требования – это:',
    answer:   'возможность, которую должна обеспечивать система',
  },
  {
    question: 'Требования – это:',
    answer:   'некоторое свойство программного обеспечения, которым должна обладать система или ее компонент, чтобы удовлетворить требования формальной документации',
  },
  {
    question: 'Типичная схема процесса анализа С-требований включает в себя:',
    answer:   'идентификацию заказчика и проведение интервью с представителями заказчика',
  },
  {
    question: 'Типичная схема процесса анализа С-требований включает в себя:',
    answer:   'написание С-требований в форме стандартного документа',
  },
  {
    question: 'Типичная схема процесса анализа С-требований включает в себя:',
    answer:   'проверку С-требований и согласование их с заказчиком',
  },
  {
    question: 'В классификацию требований к программной системе входят:',
    answer:   'функциональные требования',
  },
  {
    question: 'В классификацию требований к программной системе входят:',
    answer:   'нефункциональные требования',
  },
  {
    question: 'В классификацию требований к программной системе входят:',
    answer:   'требования предметной области',
  },
  {
    question: 'Процесс определения и анализа требований включает в себя:',
    answer:   'анализ предметной области, сбор и классификацию требований',
  },
  {
    question: 'Процесс определения и анализа требований включает в себя:',
    answer:   'разрешение противоречий и определение приоритетов',
  },
  {
    question: 'Процесс определения и анализа требований включает в себя:',
    answer:   'проверку, специфицирование и документирование требований',
  },
  {
    question: 'При аттестации требований выполняются следующие типы проверок документации требований',
    answer:   'проверка правильности требований',
  },
  {
    question: 'При аттестации требований выполняются следующие типы проверок документации требований',
    answer:   'проверка на непротиворечивость',
  },
  {
    question: 'При аттестации требований выполняются следующие типы проверок документации требований',
    answer:   'проверка на полноту и на выполнимость',
  },
  {
    question: 'К методам аттестации требований относится:',
    answer:   'обзор требований',
  },
  {
    question: 'К методам аттестации требований относится:',
    answer:   'прототипирование',
  },
  {
    question: 'К методам аттестации требований относится:',
    answer:   'генерация тестовых сценариев',
  },
  {
    question: 'Типы D-требований',
    answer:   'функциональные требования',
  },
  {
    question: 'Типы D-требований',
    answer:   'нефункциональные требования',
  },
  {
    question: 'Типы D-требований',
    answer:   'обратные требования',
  },
  {
    question: 'Возможные способы организации D-требований',
    answer:   'по свойствам, по классам',
  },
  {
    question: 'Возможные способы организации D-требований',
    answer:   'по вариантам использования',
  },
  {
    question: 'Возможные способы организации D-требований',
    answer:   'по состояниям и по иерархии функции',
  },
  {
    question: 'Типы интерфейсных требований',
    answer:   'пользовательские требования',
  },
  {
    question: 'Типы интерфейсных требований',
    answer:   'аппаратные требования',
  },
];

module.exports = {
  quizzes,
  params,
};
